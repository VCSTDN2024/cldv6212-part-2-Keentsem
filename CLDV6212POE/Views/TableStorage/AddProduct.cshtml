@model CLDV6212POE.Models.ProductEntity
@{
    ViewData["Title"] = "ABC Retail - Add Product";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
    <style>
        .pixel-retro {
            font-family: 'Courier New', monospace;
            background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
            color: #f3c34e;
            min-height: 100vh;
        }
        .card {
            background: rgba(45, 45, 45, 0.9);
            border: 2px solid #f3c34e;
            border-radius: 8px;
        }
        .card-header {
            background: #f3c34e;
            color: #1a1a1a;
            font-weight: bold;
        }
        .btn-primary {
            background: #f3c34e;
            border-color: #f3c34e;
            color: #1a1a1a;
            font-weight: bold;
        }
        .btn-primary:hover {
            background: #e6b143;
            border-color: #e6b143;
        }
        .form-control {
            background: rgba(45, 45, 45, 0.8);
            border: 1px solid #f3c34e;
            color: #f3c34e;
        }
        .form-control:focus {
            background: rgba(45, 45, 45, 0.9);
            border-color: #f3c34e;
            box-shadow: 0 0 0 0.2rem rgba(243, 195, 78, 0.25);
            color: #f3c34e;
        }
        .form-label {
            color: #f3c34e;
            font-weight: bold;
        }
    </style>
</head>
<body class="pixel-retro">
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h2><i class="fas fa-box-open"></i> Add Product</h2>
                        <p class="mb-0 text-muted">Store product information in Azure Table Storage</p>
                    </div>
                    <div class="card-body">
                        @if (TempData["Msg"] != null)
                        {
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <i class="fas fa-check-circle"></i> @TempData["Msg"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        }

                        @if (TempData["Error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <i class="fas fa-exclamation-triangle"></i> @TempData["Error"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        }

                        <form asp-controller="TableStorage" asp-action="AddProduct" method="post" class="needs-validation" novalidate>
                            @Html.AntiForgeryToken()

                            <div class="row">
                                <div class="col-md-8 mb-3">
                                    <label for="Sku" class="form-label">SKU <span class="text-danger">*</span></label>
                                    <input asp-for="Sku" type="text" class="form-control" id="Sku" required />
                                    <div class="invalid-feedback">Please provide a valid SKU.</div>
                                    <span asp-validation-for="Sku" class="text-danger"></span>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="Name" class="form-label">Name <span class="text-danger">*</span></label>
                                    <input asp-for="Name" type="text" class="form-control" id="Name" required />
                                    <div class="invalid-feedback">Please provide a valid name.</div>
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-8 mb-3">
                                    <label for="Category" class="form-label">Category</label>
                                    <input asp-for="Category" type="text" class="form-control" id="Category" />
                                    <span asp-validation-for="Category" class="text-danger"></span>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="Price" class="form-label">Price (R) <span class="text-danger">*</span></label>
                                    <input asp-for="Price" type="number" step="0.01" min="0" class="form-control" id="Price" required />
                                    <div class="invalid-feedback">Please provide a valid price.</div>
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="Stock" class="form-label">Stock</label>
                                    <input asp-for="Stock" type="number" class="form-control" id="Stock" />
                                    <span asp-validation-for="Stock" class="text-danger"></span>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="PartitionKey" class="form-label">Partition Key</label>
                                    <input asp-for="PartitionKey" type="text" class="form-control" id="PartitionKey" value="PRODUCT" readonly />
                                    <div class="form-text">
                                        <i class="fas fa-info-circle"></i> Used for Azure Table partitioning
                                    </div>
                                </div>
                            </div>

                            <div class="alert alert-info">
                                <i class="fas fa-cloud"></i>
                                <strong>Azure Table Storage Info:</strong>
                                This data will be stored in the "Products" table in your Azure Storage account.
                                <br><small>Check Azure Portal: Storage accounts → klmazureapp1 → Tables → Products</small>
                            </div>

                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                <a asp-action="Products" class="btn btn-secondary me-md-2">
                                    <i class="fas fa-arrow-left"></i> Back to Products
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save"></i> Save Product
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Navigation -->
                <div class="mt-3 text-center">
                    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-secondary">
                        <i class="fas fa-home"></i> Back to Home
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        // Bootstrap form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Format price input
        document.addEventListener('DOMContentLoaded', function() {
            const priceInput = document.getElementById('Price');
            if (priceInput) {
                priceInput.addEventListener('blur', function() {
                    let value = parseFloat(this.value);
                    if (!isNaN(value)) {
                        this.value = value.toFixed(2);
                    }
                });
            }
        });
    </script>
</body>
</html>
